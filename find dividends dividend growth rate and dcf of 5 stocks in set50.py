# -*- coding: utf-8 -*-
"""find dividends, dividend growth rate, and DCF of 5 stocks in SET50

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k1DJaLm6H7Ln5SVlp0x6npaX_Wf2eS2D

** Follow the above steps to find dividends, dividend growth rate, and DCF of 5 stocks in SET50, namely

PTT,
AOT,
KBANK,
CPALL,
ADVANC 


Here, you will use only the data from 2016-01-01 to 2020-12-31 **

# PTT
"""

import pandas as pd
import pandas_datareader as reader
import numpy as np
import matplotlib.pyplot as plt
apple = reader.DataReader("PTT.bk",
data_source="yahoo", 
start='2016-01-01', # started date 
end='2020-12-31')  # ended date
apple.head()

adj_close = apple['Adj Close'] # adjusted close price
pct_adj_close = adj_close.pct_change(1) # find daily percent changes 
close = apple['Close'] # close price
pct_close = close.pct_change(1) # find daily percent changes 
plt.figure(figsize=(15,15)) # adjusted the size of graph 
plt.plot(pct_close- pct_adj_close, "o") # plot the graph
plt.grid() # create the grid in graph
plt.xlabel("Date") # date for X axis
plt.ylabel("Difference in Change") # difference in cahnge for Y axis

delta = pct_close- pct_adj_close # sum of daily percentage changes close price and adjust close price
threshold = -0.001 # We pick threshold = -0.001 from the graph.
delta = delta[delta<threshold] # screen only the location where differences is less than -0.001
print("The dividens are paid out on:")
for date in delta.index:
  print(date.date())

dividends =[]
for date in delta.index:
  k = np.nonzero(apple.index==date)[0][0] # find the row where dividends have been paid.
  close_before = close[k-1]  # list that assign close k-1 for close_before
  pct_close_div = pct_close[k] 
  pct_adj_div = pct_adj_close[k] 
  dividend = close_before * ( pct_adj_div - pct_close_div)
  dividends.append(dividend)
dividends = pd.Series(dividends, index=delta.index)
print(dividends)

yearly_dividends = []
for y in range(2016,2021): # Find dividens growth rate in the last 5 years.
  dividend_year = dividends[dividends.index.year == y] #filter only one year
  yearly_dividends.append(dividend_year.sum()) # find total dividens per year
yearly_dividends = pd.Series(yearly_dividends, index=np.arange(2016,2021))
dividend_growth = yearly_dividends.pct_change(1).dropna()
print("Yearly dividends: ")
print(yearly_dividends)
print("Dividend growth rate: ")
print(dividend_growth)
g = dividend_growth.median()
print(f"Dividends growth rate is {g*100} %.")

r = 0.1 # Assume that we can find the risk-free security at 10%
S_apple = yearly_dividends[2020]/(r - g) # D1/(r - g)
print(f"The current apple stock price is {adj_close.iloc[-1]}.") 
print(f"From the Discounted Cash Flow model, Apple Stock price is {S_apple}.")

"""#AOT"""

import pandas as pd
import pandas_datareader as reader
import numpy as np
import matplotlib.pyplot as plt
apple = reader.DataReader("AOT.bk",
data_source="yahoo", 
start='2016-01-01', # started date 
end='2020-12-31')  # ended date
apple.head()

adj_close = apple['Adj Close'] # adjusted close price
pct_adj_close = adj_close.pct_change(1) # find daily percent changes 
close = apple['Close'] # close price
pct_close = close.pct_change(1) # find daily percent changes 
plt.figure(figsize=(15,15)) # adjusted the size of graph 
plt.plot(pct_close- pct_adj_close, "o") # plot the graph
plt.grid() # create the grid in graph
plt.xlabel("Date") # date for X axis
plt.ylabel("Difference in Change") # difference in cahnge for Y axis

delta = pct_close- pct_adj_close # sum of daily percentage changes close price and adjust close price
threshold = -0.001 # We pick threshold = -0.001 from the graph.
delta = delta[delta<threshold] # screen only the location where differences is less than -0.001
print("The dividens are paid out on:")
for date in delta.index:
  print(date.date())

dividends =[]
for date in delta.index:
  k = np.nonzero(apple.index==date)[0][0] # find the row where dividends have been paid.
  close_before = close[k-1]  # list that assign close k-1 for close_before
  pct_close_div = pct_close[k] 
  pct_adj_div = pct_adj_close[k] 
  dividend = close_before * ( pct_adj_div - pct_close_div)
  dividends.append(dividend)
dividends = pd.Series(dividends, index=delta.index)
print(dividends)

yearly_dividends = []
for y in range(2016,2021): # Find dividens growth rate in the last 5 years.
  dividend_year = dividends[dividends.index.year == y] #filter only one year
  yearly_dividends.append(dividend_year.sum()) # find total dividens per year
yearly_dividends = pd.Series(yearly_dividends, index=np.arange(2016,2021))
dividend_growth = yearly_dividends.pct_change(1).dropna()
print("Yearly dividends: ")
print(yearly_dividends)
print("Dividend growth rate: ")
print(dividend_growth)
g = dividend_growth.median()
print(f"Dividends growth rate is {g*100} %.")

r = 0.1 # Assume that we can find the risk-free security at 10%
S_apple = yearly_dividends[2020]/(r - g) # D1/(r - g)
print(f"The current apple stock price is {adj_close.iloc[-1]}.") # 
print(f"From the Discounted Cash Flow model, Apple Stock price is {S_apple}.")

"""#KBANK"""

import pandas as pd
import pandas_datareader as reader
import numpy as np
import matplotlib.pyplot as plt
apple = reader.DataReader("KBANK.bk", "yahoo","2016-01-01","2020-12-31") 
apple.head()

adj_close = apple['Adj Close'] # adjusted close prices
pct_adj_close = adj_close.pct_change(1) # find daily percent changes 
close = apple['Close'] # close price
pct_close = close.pct_change(1) # find daily percent changes 
plt.figure(figsize=(15,15))
plt.plot(pct_close- pct_adj_close, "o")
plt.grid()
plt.xlabel("Date")
plt.ylabel("Difference in Change")

delta = pct_close- pct_adj_close 
threshold = -0.001 # We pick threshold = -0.001 from the graph.
delta = delta[delta<threshold] # screen only the location where differences is less than -0.001
print("The dividens are paid out on:")
for date in delta.index:
  print(date.date())

dividends =[]
for date in delta.index:
  k = np.nonzero(apple.index==date)[0][0] # find the row where dividends have been paid.
  close_before = close[k-1]
  pct_close_div = pct_close[k]
  pct_adj_div = pct_adj_close[k]
  dividend = close_before * ( pct_adj_div - pct_close_div)
  dividends.append(dividend)
dividends = pd.Series(dividends, index=delta.index)
print(dividends)

yearly_dividends = []
for y in range(2016,2021): # Find dividens growth rate in the last 5 years.
  dividend_year = dividends[dividends.index.year == y] #filter only one year
  yearly_dividends.append(dividend_year.sum()) # find total dividens per year
yearly_dividends = pd.Series(yearly_dividends, index=np.arange(2016,2021))
dividend_growth = yearly_dividends.pct_change(1).dropna()
print("Yearly dividends: ")
print(yearly_dividends)
print("Dividend growth rate: ")
print(dividend_growth)
g = dividend_growth.median()
print(f"Dividends growth rate is {g*100} %.")

r = 0.1 # Assume that we can find the risk-free security at 10%
S_apple = yearly_dividends[2020]/(r - g) # D1/(r - g)
print(f"The current apple stock price is {adj_close.iloc[-1]}.") # 
print(f"From the Discounted Cash Flow model, Apple Stock price is {S_apple}.")

"""#CPALL"""

import pandas as pd
import pandas_datareader as reader
import numpy as np
import matplotlib.pyplot as plt
apple = reader.DataReader("CPALL.bk", "yahoo","2016-01-01","2020-12-31") 
apple.head()

adj_close = apple['Adj Close'] # adjusted close prices
pct_adj_close = adj_close.pct_change(1) # find daily percent changes 
close = apple['Close'] # close price
pct_close = close.pct_change(1) # find daily percent changes 
plt.figure(figsize=(15,15))
plt.plot(pct_close- pct_adj_close, "o")
plt.grid()
plt.xlabel("Date")
plt.ylabel("Difference in Change")

delta = pct_close- pct_adj_close 
threshold = -0.001 # We pick threshold = -0.001 from the graph.
delta = delta[delta<threshold] # screen only the location where differences is less than -0.001
print("The dividens are paid out on:")
for date in delta.index:
  print(date.date())

dividends =[]
for date in delta.index:
  k = np.nonzero(apple.index==date)[0][0] # find the row where dividends have been paid.
  close_before = close[k-1]
  pct_close_div = pct_close[k]
  pct_adj_div = pct_adj_close[k]
  dividend = close_before * ( pct_adj_div - pct_close_div)
  dividends.append(dividend)
dividends = pd.Series(dividends, index=delta.index)
print(dividends)

yearly_dividends = []
for y in range(2016,2021): # Find dividens growth rate in the last 5 years.
  dividend_year = dividends[dividends.index.year == y] #filter only one year
  yearly_dividends.append(dividend_year.sum()) # find total dividens per year
yearly_dividends = pd.Series(yearly_dividends, index=np.arange(2016,2021))
dividend_growth = yearly_dividends.pct_change(1).dropna()
print("Yearly dividends: ")
print(yearly_dividends)
print("Dividend growth rate: ")
print(dividend_growth)
g = dividend_growth.median()
print(f"Dividends growth rate is {g*100} %.")

r = 0.1 # Assume that we can find the risk-free security at 10%
S_apple = yearly_dividends[2020]/(r - g) # D1/(r - g)
print(f"The current apple stock price is {adj_close.iloc[-1]}.") # 
print(f"From the Discounted Cash Flow model, Apple Stock price is {S_apple}.")

"""#ADVANC"""

import pandas as pd
import pandas_datareader as reader
import numpy as np
import matplotlib.pyplot as plt
apple = reader.DataReader("ADVANC.bk", "yahoo","2016-01-01","2020-12-31") 
apple.head()

adj_close = apple['Adj Close'] # adjusted close prices
pct_adj_close = adj_close.pct_change(1) # find daily percent changes 
close = apple['Close'] # close price
pct_close = close.pct_change(1) # find daily percent changes 
plt.figure(figsize=(15,15))
plt.plot(pct_close- pct_adj_close, "o")
plt.grid()
plt.xlabel("Date")
plt.ylabel("Difference in Change")

delta = pct_close- pct_adj_close 
threshold = -0.001 # We pick threshold = -0.001 from the graph.
delta = delta[delta<threshold] # screen only the location where differences is less than -0.001
print("The dividens are paid out on:")
for date in delta.index:
  print(date.date())

dividends =[]
for date in delta.index:
  k = np.nonzero(apple.index==date)[0][0] # find the row where dividends have been paid.
  close_before = close[k-1]
  pct_close_div = pct_close[k]
  pct_adj_div = pct_adj_close[k]
  dividend = close_before * ( pct_adj_div - pct_close_div)
  dividends.append(dividend)
dividends = pd.Series(dividends, index=delta.index)
print(dividends)

yearly_dividends = []
for y in range(2016,2021): # Find dividens growth rate in the last 5 years.
  dividend_year = dividends[dividends.index.year == y] #filter only one year
  yearly_dividends.append(dividend_year.sum()) # find total dividens per year
yearly_dividends = pd.Series(yearly_dividends, index=np.arange(2016,2021))
dividend_growth = yearly_dividends.pct_change(1).dropna()
print("Yearly dividends: ")
print(yearly_dividends)
print("Dividend growth rate: ")
print(dividend_growth)
g = dividend_growth.median()
print(f"Dividends growth rate is {g*100} %.")

r = 0.1 # Assume that we can find the risk-free security at 10%
S_apple = yearly_dividends[2020]/(r - g) # D1/(r - g)
print(f"The current apple stock price is {adj_close.iloc[-1]}.") # 
print(f"From the Discounted Cash Flow model, Apple Stock price is {S_apple}.")